{
    // See https://go.microsoft.com/fwlink/?LinkId=733558
    // for the documentation about the tasks.json format
    "version": "2.0.0",
    "tasks": [
        {
            "label": "project build",
            "type": "shell",
            "command": "/usr/bin/clang++-5.0",
            "args": [
                "-g",
                
                "-std=c++1z",
                "-fno-exceptions",
                
                "-Wall",
                "-Werror",
                "-Wfatal-errors",
            
                "Code/Main.cpp",
                "Code/Camera.cpp",
                "Code/Editor/Importers/MeshImporter.cpp",
                "Code/Editor/Importers/SceneImporter.cpp",
                "Code/Editor/Importers/TextureImporter.cpp",
                "Code/Engine/Utils/FpsCounter.cpp",
                "Code/Engine/Common/Flag.cpp",
                "Code/Engine/Common/Object.cpp",
                "Code/Engine/Common/Time.cpp",
                "Code/Engine/Common/Input.cpp",
                "Code/Engine/Common/File/File.cpp",
                "Code/Engine/Common/Random/Random.cpp",
                "Code/Engine/Nodes/Node.cpp",
                "Code/Engine/Nodes/Transform/Transform.cpp",
                "Code/Engine/Resources/Resource.cpp",
                "Code/Engine/Resources/DynamicResource.cpp",
                "Code/Engine/Resources/Shaders/Shader.cpp",
                "Code/Engine/Resources/Shaders/Program.cpp",
                "Code/Engine/Resources/Textures/Texture.cpp",
                "Code/Engine/Resources/Textures/TextureData.cpp",
                "Code/Engine/Resources/Meshes/MeshData.cpp",
                "Code/Engine/Resources/Meshes/Mesh.cpp",
                "Code/Engine/Window/Window.cpp",
                "Code/Engine/Window/WindowApi.cpp",
                "Code/Engine/Window/WindowCallbacks.cpp",
                "Code/Engine/Renderer/RendererApi.cpp",

                "-I Code",

                "-I /usr/include",
                "-L /usr/lib/x86_64-linux-gnu",

                "-l GL",
                "-l GLEW",
                "-l glfw",
                "-l freeimage",
                "-l assimp",

                // c++ experimental
                "-l stdc++fs", 

                "-o Build/Demo"
            ],
            "group": {
                "kind": "build",
                "isDefault": true
            }
        }
    ]
}